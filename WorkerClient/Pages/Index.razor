@page "/"
@using WorkerClient.Models
@using Client.Data
@using System.Text.Json
@using System.Collections.ObjectModel
@inject ITest tst
<h3><p style="font-family:'Courier New'">Orders</p></h3>
@if (orders == null) {
    <p style="font-family:'Courier New'">
        <em><img src="pizza.gif" alt="Italian Trulli"></em>
    </p>
}
else if (!orders.Any()) {
    <p style="font-family:'Courier New'">
        <em><img src="pizza.gif" alt="Italian Trulli">
            </em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th><p style="font-family:'Courier New'">items</p></th>
            <th><p style="font-family:'Courier New'">adress</p></th>
            <th>
                <h7>
                    <p style="font-family:'Courier New'">Pris</p>
                </h7>
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in orders)
        {
            <tr>
                <td>
                    <p style="font-family:'Courier New'">@item.items</p>
                </td>
                <td>
                  <p style="font-family:'Courier New'">  @item.adr</p>
                </td>
                <td>
                    <p style="font-family:'Courier New'">     @item.price DKK </p>
                </td>
                <!--<td>/td>-->
                <td>
                </td>
            </tr>
        }
        </tbody>
    </table>




@code {
    private static string listuri = "http://localhost:8080/orders/";
    private static int x = 0;
    static IList<OrderObject> orders = new Collection<OrderObject>();


    protected override async Task OnInitializedAsync()
    {
        orders.Clear();
        orders.Add(await tst.ReceiveOrdersAsync(0));

        try {
            for (int x = 0; x < orders[0].ordernumber ; x++)
                {
                    orders.Add(await tst.ReceiveOrdersAsync(x));
                }
            orders.RemoveAt(0);
            Console.WriteLine(orders[0].phone);
        }
        catch(Exception e){}
        Console.WriteLine(orders.Count);
    }
}
}
